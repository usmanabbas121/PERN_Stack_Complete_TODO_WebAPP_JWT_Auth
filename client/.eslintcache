[{"E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\index.js":"1","E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\App.js":"2","E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\components\\Login.js":"3","E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\components\\Register.js":"4","E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\components\\dashboard\\Dashboard.js":"5","E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\components\\Landing.js":"6","E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\components\\dashboard\\todolist\\InputTodo.js":"7","E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\components\\dashboard\\todolist\\ListTodo.js":"8","E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\components\\dashboard\\todolist\\EditTodo.js":"9"},{"size":168,"mtime":1608561845507,"results":"10","hashOfConfig":"11"},{"size":2505,"mtime":1608722845492,"results":"12","hashOfConfig":"11"},{"size":1779,"mtime":1608634232169,"results":"13","hashOfConfig":"11"},{"size":2108,"mtime":1608633307867,"results":"14","hashOfConfig":"11"},{"size":1551,"mtime":1608724212199,"results":"15","hashOfConfig":"11"},{"size":498,"mtime":1608722303411,"results":"16","hashOfConfig":"11"},{"size":1342,"mtime":1608722475279,"results":"17","hashOfConfig":"11"},{"size":1788,"mtime":1608736286135,"results":"18","hashOfConfig":"11"},{"size":2567,"mtime":1608722475078,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gli22r",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\index.js",[],"E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\App.js",[],"E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\components\\Login.js",["41"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Login = ({ setAuth }) => {\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = inputs;\r\n\r\n  const onChange = (e) =>\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { email, password };\r\n      const response = await fetch(\"http://localhost:5000/auth/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n      if (parseRes.token) {\r\n        localStorage.setItem(\"token\", parseRes.token);\r\n        setAuth(true);\r\n        toast.success(\"Logged in Successfully\");\r\n      } else {\r\n        setAuth(false);\r\n        toast.error(parseRes);\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"mt-5 text-center\">Login</h1>\r\n      <form onSubmit={onSubmitForm}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={(e) => onChange(e)}\r\n          className=\"form-control my-3\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => onChange(e)}\r\n          className=\"form-control my-3\"\r\n        />\r\n        <button className=\"btn btn-success btn-block\">Log In</button>\r\n      </form>\r\n      <Link to=\"/register\">register</Link>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n",["42","43"],"E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\components\\Register.js",["44"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Register = ({ setAuth }) => {\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const { email, password, name } = inputs;\r\n\r\n  const onChange = (e) =>\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { email, password, name };\r\n      const response = await fetch(\"http://localhost:5000/auth/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.token) {\r\n        localStorage.setItem(\"token\", parseRes.token);\r\n        setAuth(true);\r\n        toast.success(\"Register Successfully\");\r\n      } else {\r\n        setAuth(false);\r\n        toast.error(parseRes);\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"mt-5 text-center\">Register</h1>\r\n      <form onSubmit={onSubmitForm}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={email}\r\n          placeholder=\"email\"\r\n          onChange={(e) => onChange(e)}\r\n          className=\"form-control my-3\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          placeholder=\"password\"\r\n          onChange={(e) => onChange(e)}\r\n          className=\"form-control my-3\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"name\"\r\n          onChange={(e) => onChange(e)}\r\n          className=\"form-control my-3\"\r\n        />\r\n        <button className=\"btn btn-success btn-block\">Submit</button>\r\n      </form>\r\n      <Link to=\"/login\">Already have an account? Log In</Link>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\components\\dashboard\\Dashboard.js",[],"E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\components\\Landing.js",[],"E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\components\\dashboard\\todolist\\InputTodo.js",[],"E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\components\\dashboard\\todolist\\ListTodo.js",[],"E:\\MERN Stack Dev\\MernStackTraining\\Practical Exercises\\PERN_Stack_Complete_TODO_WebAPP_JWT_Auth\\client\\src\\components\\dashboard\\todolist\\EditTodo.js",[],{"ruleId":"45","severity":1,"message":"46","line":2,"column":16,"nodeType":"47","messageId":"48","endLine":2,"endColumn":24},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":16,"nodeType":"47","messageId":"48","endLine":2,"endColumn":24},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-global-assign","no-unsafe-negation"]